#include <stdio.h>
#include <stdlib.h>

struct TreeNode {
    int val;
    TreeNode *left;
     TreeNode *right;
};

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
    TreeNode *lca = root;
    return lca;
    }
};

int main() {
    TreeNode* six = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* two = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* eight = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* zero = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* four = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* seven = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* one = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* three = (TreeNode*) malloc(sizeof(TreeNode));
    TreeNode* five = (TreeNode*) malloc(sizeof(TreeNode));
   
    zero->val = 0;
    one->val = 9;
    two->val = 2;
    three->val = 3;
    four->val = 4;
    five->val = 5;
    six->val = 6;
    seven->val = 7;
    eight->val = 8;

    three->left = five; three->right = one;
    five->left = six; five->right = two;
    one->left = zero; one->right = eight;
    six->left = NULL; six->right = two;
    two->left = seven; two->right = four;
    zero->left = NULL; zero->right = NULL;
    eight->left = NULL; eight->right = NULL;
    seven->left = NULL; seven->right = NULL;
    four->left = NULL; four->right = NULL;

    TreeNode* lca = lowestCommonAncestor(three, five, one);
    printf("%d\n", lca->val);
}
